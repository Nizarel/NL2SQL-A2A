#!/usr/bin/env python3
"""
Test script to diagnose import and execution issues
"""

import sys
import os

print("üîç Starting diagnostic test...")

# Add src to path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))
print("‚úì Python path configured")

try:
    from dotenv import load_dotenv
    print("‚úì dotenv imported")
    
    load_dotenv()
    print("‚úì Environment loaded")
    
    # Test environment variables
    mcp_url = os.getenv('MCP_SERVER_URL')
    azure_endpoint = os.getenv('AZURE_OPENAI_ENDPOINT')
    print(f"‚úì MCP URL: {mcp_url[:50]}..." if mcp_url else "‚úó MCP URL not found")
    print(f"‚úì Azure endpoint: {azure_endpoint[:50]}..." if azure_endpoint else "‚úó Azure endpoint not found")
    
except Exception as e:
    print(f"‚úó Environment setup failed: {e}")
    sys.exit(1)

try:
    from semantic_kernel import Kernel
    print("‚úì Semantic Kernel imported")
except Exception as e:
    print(f"‚úó Semantic Kernel import failed: {e}")
    sys.exit(1)

try:
    from semantic_kernel.connectors.ai.open_ai import OpenAIChatCompletion, AzureChatCompletion
    print("‚úì OpenAI connectors imported")
except Exception as e:
    print(f"‚úó OpenAI connectors import failed: {e}")
    sys.exit(1)

try:
    from plugins.mcp_database_plugin import MCPDatabasePlugin
    print("‚úì MCP Database Plugin imported")
except Exception as e:
    print(f"‚úó MCP Database Plugin import failed: {e}")
    sys.exit(1)

try:
    from services.schema_service import SchemaService
    print("‚úì Schema Service imported")
except Exception as e:
    print(f"‚úó Schema Service import failed: {e}")
    sys.exit(1)

try:
    from services.nl2sql_service import NL2SQLService
    print("‚úì NL2SQL Service imported")
except Exception as e:
    print(f"‚úó NL2SQL Service import failed: {e}")
    sys.exit(1)

print("\nüéâ All imports successful! The NL2SQL system should work.")
print("üöÄ Testing basic initialization...")

try:
    # Test basic kernel creation
    kernel = Kernel()
    print("‚úì Kernel created")
    
    # Test MCP plugin initialization
    mcp_url = os.getenv('MCP_SERVER_URL')
    if mcp_url:
        mcp_plugin = MCPDatabasePlugin(mcp_url)
        print("‚úì MCP Plugin initialized")
    else:
        print("‚úó Cannot test MCP Plugin - no URL in environment")
    
    print("\n‚úÖ Basic initialization test passed!")
    
except Exception as e:
    print(f"‚úó Initialization test failed: {e}")
    import traceback
    traceback.print_exc()

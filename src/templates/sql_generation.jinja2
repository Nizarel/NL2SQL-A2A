{# BASIC SQL GENERATION TEMPLATE #}
{# Simple template for basic SQL queries with essential validation #}

{# EARLY EXIT: Forecast/Delivery Detection #}
{% if "forecast" in question.lower() or "prediction" in question.lower() or "forecasts" in question.lower() or "predicted" in question.lower() or "estimates" in question.lower() %}
SELECT 'This database contains only actual sales data. No forecast or prediction data is available for comparison. Available metrics: actual revenue, units sold, customer analysis, product performance.' AS explanation;
{% elif "delivery" in question.lower() or "routes" in question.lower() or "logistics" in question.lower() or "shipping" in question.lower() %}
SELECT 'This database contains sales analytics data only. No delivery or routing data is available.' AS explanation;
{% else %}

USER QUESTION: {{ question }}

You are an expert SQL query generator for a Microsoft SQL Server business analytics database.

INTENT ANALYSIS:
{{ intent_analysis.get('analysis', 'No intent analysis available') }}

DATABASE SCHEMA:
{{ schema_context }}

{% include 'shared/sql_server_rules.jinja2' %}

{% include 'shared/table_relationships.jinja2' %}

{% include 'shared/business_context.jinja2' %}

Generate a SQL Server query that:
1. Accurately answers the user's question
2. Uses proper SQL Server syntax (NO PostgreSQL/MySQL functions)
3. Uses SELECT TOP instead of LIMIT or OFFSET...FETCH NEXT
4. Uses proper column names from the schema
5. Includes appropriate JOINs based on relationships
6. Has proper spacing around AS keyword in column aliases
7. Is optimized for performance
8. Returns meaningful business results

Your response must contain ONLY executable SQL code.

Do NOT include:
- Explanations before or after the query
- Markdown formatting (```sql or ```)
- Template placeholders like [column_name]
- Multiple queries or query examples
- Comments explaining what the query does

Start your response immediately with the SQL query (WITH or SELECT statement).
{% endif %}

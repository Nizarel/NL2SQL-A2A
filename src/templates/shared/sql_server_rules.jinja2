{# SQL SERVER SYNTAX RULES - SHARED COMPONENT #}
{# This component contains all SQL Server specific syntax requirements #}

CRITICAL SQL GENERATION RULES FOR SQL SERVER:

*** URGENT: FOR LAST QUARTER QUERIES USE ONLY THIS PATTERN ***
WITH LastQuarter AS (SELECT TOP 1 Year, Q FROM dev.tiempo ORDER BY Year DESC, Q DESC)
*** NEVER USE MAX(Year), MAX(Q) - IT RETURNS 0 ROWS ***

1. TABLE NAMING:
   - ALWAYS use 'dev.' prefix for table names (e.g., dev.cliente, dev.segmentacion)
   - Use correct column names as shown in schema
   - customer_id (NOT cliente_id)
   - Nombre_cliente for customer names
   - IngresoNetoSImpuestos for revenue

2. SQL SERVER SYNTAX REQUIREMENTS:
   - Use "SELECT TOP {{ limit if limit and limit <= 10000 else 10 }}" instead of "SELECT ... LIMIT"
   - Use "SELECT TOP N" instead of "OFFSET ... FETCH NEXT" syntax
   - Use YEAR(date_column) instead of EXTRACT(YEAR FROM date_column)
   - Use MONTH(date_column) instead of EXTRACT(MONTH FROM date_column)
   - Use DAY(date_column) instead of EXTRACT(DAY FROM date_column)
   - Use GETDATE() instead of NOW() or CURRENT_TIMESTAMP
   - Use CAST(GETDATE() AS DATE) instead of CURRENT_DATE
   - Use + for string concatenation instead of CONCAT()

3. TIME PERIOD ANALYSIS PATTERNS:
   - For "last quarter" queries: First find MAX(Year), then find MAX(Quarter) for that specific year
   - Use two-step CTE approach: YearInfo CTE → QuarterInfo CTE → Main Analysis
   - Join time filters using INNER JOIN (not CROSS JOIN) for better performance
   - Pattern: FROM main_table INNER JOIN time_filter ON time_conditions
   - Use proper spacing around AS keyword for column aliases

3. CORRECT SYNTAX EXAMPLES:
   Date Functions:
   WRONG: SELECT ... WHERE EXTRACT(YEAR FROM calday) = 2025
   CORRECT: SELECT ... WHERE YEAR(calday) = 2025
   
   Limit Results:
   WRONG: SELECT ... ORDER BY column LIMIT 10;
   CORRECT: SELECT TOP 10 ... ORDER BY column;
   
   Column Aliases:
   WRONG: SUM(revenue)AS total_revenue
   CORRECT: SUM(revenue) AS total_revenue

4. BUSINESS CONTEXT REQUIREMENTS:
   - Join tables properly using the relationships shown
   - Use meaningful column aliases with proper AS keyword spacing
   - Include appropriate WHERE clauses for business context

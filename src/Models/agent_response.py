from typing import Any, List, Optional, Dict
from pydantic import BaseModel, Field

class FormattedResults(BaseModel):
    status: str
    headers: List[str]
    rows: List[Dict[str, Any]]
    total_rows: int

class AgentResponse(BaseModel):
    formatted_results: Optional[FormattedResults] = Field(None, description="Formatted results for UI or downstream processing")
    summary: Optional[Any] = Field(None, description="Summary or insights generated by the agent")
    insights: Optional[Any] = Field(None, description="Additional insights if present")
    recommendations: Optional[Any] = Field(None, description="Business or technical recommendations")
